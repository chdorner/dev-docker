scriptencoding utf-8
set encoding=utf-8

set shell=bash

let mapleader = ","

set number
set ruler
set tabstop=2
set shiftwidth=2
set expandtab
set nowrap
set colorcolumn=80

syntax on
set background=dark
set term=screen-256color
set t_Co=256
let g:solarized_termcolors=256
let g:solarized_visibility =  "low"
colorscheme solarized

set nobackup
set nowritebackup
set noswapfile

set list
set listchars=tab:>∙,trail:∙

set statusline=%m%F\ %r%y\ %{fugitive#statusline()}
set laststatus=2 " Always show status line (even one just one window is open)

let g:ctrlp_map = '<c-t>'

map <C-l> :tabn<CR>
map <C-h> :tabp<CR>
map <C-n> :tabnew<CR>
nmap <leader>r :%s/<c-r>=expand("<cword>")<cr>/<c-r>=expand("<cword>")<cr>/gc<left><left><left>
nmap <leader>R :%s/<c-r>=expand("<cword>")<cr>/<c-r>=expand("<cword>")<cr>/g<left><left>

" F5 in insert mode to toggle paste mode
set pastetoggle=<F5>

" Toggle quickfix window
map <C-\> :cclose<CR>

" fugitive mappings
map <leader>gc :Gcommit<CR>i
map <leader>gs :Gst<CR>
map <leader>gd :Gdiff<CR>
map <leader>gb :Gbrowse<CR>
map <leader>gp :Git push<CR>
map <leader>ga :Gwrite<CR>

" NERDTree
let NERDTreeShowHidden=1
au VimEnter * NERDTreeToggle
au VimEnter * wincmd p
au BufEnter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
nmap <leader>t :NERDTreeToggle<CR>
nmap <leader>T :NERDTreeFind<CR>

" Go
autocmd BufEnter *.go  set tabstop=2|set shiftwidth=2|set noexpandtab
autocmd BufWritePre *.go Fmt

" Open epub files as zip files
au BufReadCmd *.epub call zip#Browse(expand("<amatch>"))

" Java
autocmd BufEnter *.java set tabstop=4|set shiftwidth=4

" Ruby
autocmd BufEnter *.ruby  set tabstop=2|set shiftwidth=2|set expandtab
